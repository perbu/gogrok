package fragments

import (
	"github.com/perbu/gogrok/analytics"
	"fmt"
	"strconv"
)

templ About() {
    <div>
        <h1>About Grogrok</h1>
        <p>Gogrok is a cross-module analysis tool for Go.</p>
    </div>
    }

templ ExternalModules(mods []analytics.Module) {
    <div id="module">
    <h2>External Modules</h2>
    <ul>
    for _, mod := range mods {
        <h3>
        {mod.Path}
        </h3>
         <ul>
            for _, rmod := range mod.ReverseModuleDependencies {
                <li><a href="#" hx-get={moduleUrl(rmod)} hx-target="#module">{rmod.Path}</a></li>
            }
        </ul>
    }
    </ul>
    </div>
    <div class="container" id="package">
      <!-- placeholder for package details -->
    </div>
}

templ LocalModules(mods []analytics.Module) {
    <div id="module">
    <h2>Local Modules</h2>
    <ul>
    for _, mod := range mods {
        <li>
            <a href="#" hx-get={moduleUrl(&mod)} hx-target="#module"
            >{mod.Path}</a> - {mod.Latest()} - Complexity {fmt.Sprintf("%.1f", mod.CalculateComplexity())} -  {slen(mod.Dependencies)} dependencies, has
            {slen(mod.ReverseModuleDependencies)} reverse dependencies. {s(mod.Files())} files, {s(mod.Lines())} lines.
        </li>
    }
    </ul>
    </div>
    <div class="container" id="package">
      <!-- placeholder for package details -->
    </div>
}

templ Module(mod *analytics.Module) {
    <div id="module">
        <h3>{mod.Path}</h3>
        <p>
            Versions in use:
            <ul>
            for _, v := range mod.GetVersions() {
                <li>{v}&nbsp;</li>
            }
            </ul>
        </p>
        <p>
            {slen(mod.Dependencies)} dependencies, has {slen(mod.ReverseModuleDependencies)} reverse dependencies.
        </p>
        <p>
            {s(mod.Files())} files, {s(mod.Lines())} lines.
        </p>
        <p>
        Reverse dependencies:
        <ul>
        for _, rdep := range mod.ReverseModuleDependencies {
            <li>
                <a href="#" hx-get={moduleUrl(rdep)} hx-target="#module">{rdep.Path}</a>
            </li>
        }
        </ul>
        </p>

        <p>
        Dependencies:
        <ul>
        for _, dep := range mod.Dependencies {
            <li>
                <a href="#" hx-get={moduleUrl(dep)} hx-target="#module">{dep.Path}</a>
            </li>
        }
        </ul>
        </p>
        <h4>Packages</h4>
        <ul>
        for _, pkg := range mod.Packages {
            <li><a href="#" hx-get={packageUrl(pkg)} hx-target="#package">[{pkg.Name}]</a>
            {s(pkg.Files())} files, {s(pkg.Lines())} lines. Complexity {fmt.Sprintf("%.1f", pkg.CalculateComplexity())}
            {fmt.Sprintf("%.0f%%", pkg.Generated()*100)} generated code.
            </li>
        }
        </ul>
    </div>
    <div class="container" id="package">
      <!-- placeholder for package details -->
    </div>
}


templ Package(pkg *analytics.Package)  {
    <div id="package">
        <h3>{pkg.Name}</h3>
        <p>
            {s(pkg.Files())} files, {s(pkg.Lines())} lines.
        </p>
        <h4>Reverse Dependencies</h4>
        <ul>
        for _, rpd := range pkg.ReverseDependencies {
           <li>{rpd.Module.Path} / {rpd.Name}</li>
        }
        </ul>
        <h4>Files</h4>
        for _, f := range pkg.GetFiles() {
            <a href="#" hx-get={fileUrl(f)} hx-target="#file">[{f.Name}]</a>&nbsp;
        }
    </div>
    <div class="container" id="file">
      <!-- placeholder for file details -->
    </div>
}

templ File(f *analytics.File) {
    <div id="file">
        <h3>{f.Name}</h3>
        <h4>Content</h4>
        <code>
        <pre>
        for _, l := range f.GetSource() {
            {l}<br/>
        }
        </pre>
        </code>
    </div>
}

templ Dashboard(data map[string]interface{}) {
    <div id="module">
        <h2 class="text-2xl font-bold text-gray-800 mb-6">Dashboard</h2>

        <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6 mb-8">
            <!-- Total Local Modules -->
            <div class="bg-white p-6 rounded-lg shadow-md border-l-4 border-blue-500">
                <div class="flex items-center">
                    <div class="p-3 rounded-full bg-blue-100 mr-4">
                        <i class="fas fa-cube text-blue-500 text-xl"></i>
                    </div>
                    <div>
                        <p class="text-sm text-gray-500 uppercase">Total Local Modules</p>
                        <p class="text-2xl font-semibold text-gray-800">{fmt.Sprintf("%d", data["LocalModulesCount"])}</p>
                    </div>
                </div>
            </div>

            <!-- Total External Dependencies -->
            <div class="bg-white p-6 rounded-lg shadow-md border-l-4 border-green-500">
                <div class="flex items-center">
                    <div class="p-3 rounded-full bg-green-100 mr-4">
                        <i class="fas fa-cubes text-green-500 text-xl"></i>
                    </div>
                    <div>
                        <p class="text-sm text-gray-500 uppercase">Total External Dependencies</p>
                        <p class="text-2xl font-semibold text-gray-800">{fmt.Sprintf("%d", data["ExternalModulesCount"])}</p>
                    </div>
                </div>
            </div>

            <!-- Total Lines of Code -->
            <div class="bg-white p-6 rounded-lg shadow-md border-l-4 border-purple-500">
                <div class="flex items-center">
                    <div class="p-3 rounded-full bg-purple-100 mr-4">
                        <i class="fas fa-code text-purple-500 text-xl"></i>
                    </div>
                    <div>
                        <p class="text-sm text-gray-500 uppercase">Total Lines of Code</p>
                        <p class="text-2xl font-semibold text-gray-800">{fmt.Sprintf("%d", data["TotalLoc"])}</p>
                    </div>
                </div>
            </div>

            <!-- Average Complexity -->
            <div class="bg-white p-6 rounded-lg shadow-md border-l-4 border-yellow-500">
                <div class="flex items-center">
                    <div class="p-3 rounded-full bg-yellow-100 mr-4">
                        <i class="fas fa-project-diagram text-yellow-500 text-xl"></i>
                    </div>
                    <div>
                        <p class="text-sm text-gray-500 uppercase">Avg. Complexity</p>
                        <p class="text-2xl font-semibold text-gray-800">{fmt.Sprintf("%d", data["AvgComplexity"])}</p>
                    </div>
                </div>
            </div>

            <!-- Modules with Security Issues -->
            <div class="bg-white p-6 rounded-lg shadow-md border-l-4 border-red-500">
                <div class="flex items-center">
                    <div class="p-3 rounded-full bg-red-100 mr-4">
                        <i class="fas fa-shield-alt text-red-500 text-xl"></i>
                    </div>
                    <div>
                        <p class="text-sm text-gray-500 uppercase">Modules with Security Issues</p>
                        <p class="text-2xl font-semibold text-gray-800">{fmt.Sprintf("%d", data["SecurityIssuesCount"])}</p>
                    </div>
                </div>
            </div>

            <!-- Outdated Dependencies -->
            <div class="bg-white p-6 rounded-lg shadow-md border-l-4 border-orange-500">
                <div class="flex items-center">
                    <div class="p-3 rounded-full bg-orange-100 mr-4">
                        <i class="fas fa-exclamation-triangle text-orange-500 text-xl"></i>
                    </div>
                    <div>
                        <p class="text-sm text-gray-500 uppercase">Outdated Dependencies</p>
                        <p class="text-2xl font-semibold text-gray-800">{fmt.Sprintf("%d", data["OutdatedDepsCount"])}</p>
                    </div>
                </div>
            </div>
        </div>

        <div class="bg-white p-6 rounded-lg shadow-md mb-6">
            <h3 class="text-xl font-bold text-gray-800 mb-4">Recent Activity</h3>
            <p class="text-gray-600">No recent activity to display.</p>
        </div>
    </div>
}
